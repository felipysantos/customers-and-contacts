"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const routes = (0, express_1.Router)();
const createClient_controller_1 = __importDefault(require("../Controllers/Client/createClient.controller"));
const getAllClients_controller_1 = __importDefault(require("../Controllers/Client/getAllClients.controller"));
const getClientById_controller_1 = __importDefault(require("../Controllers/Client/getClientById.controller"));
const updateClient_controller_1 = __importDefault(require("../Controllers/Client/updateClient.controller"));
const deleteClient_controller_1 = __importDefault(require("../Controllers/Client/deleteClient.controller"));
const getContacts_controller_1 = __importDefault(require("../Controllers/Contacts/getContacts.controller"));
const createContacts_controller_1 = __importDefault(require("../Controllers/Contacts/createContacts.controller"));
const updateContact_controller_1 = __importDefault(require("../Controllers/Contacts/updateContact.controller"));
const deleteContact_controller_1 = __importDefault(require("../Controllers/Contacts/deleteContact.controller"));
const loginClient_controller_1 = __importDefault(require("../Controllers/Client/loginClient.controller"));
const authToken_middleware_1 = __importDefault(require("../Middlewares/authToken.middleware"));
const isAdmin_middleware_1 = __importDefault(require("../Middlewares/isAdmin.middleware"));
routes.get("/client/all/:id", authToken_middleware_1.default, isAdmin_middleware_1.default, getAllClients_controller_1.default);
routes.get("/client/:id", authToken_middleware_1.default, getClientById_controller_1.default);
routes.post("/client", createClient_controller_1.default);
routes.patch("/client/:id", updateClient_controller_1.default);
routes.delete("/client/:id", deleteClient_controller_1.default);
routes.post("/client/login", loginClient_controller_1.default);
routes.get("/client/:id/contact", authToken_middleware_1.default, getContacts_controller_1.default);
routes.post("/client/:id/contact", authToken_middleware_1.default, createContacts_controller_1.default);
routes.patch("/client/:id/contact", authToken_middleware_1.default, updateContact_controller_1.default);
routes.delete("/client/:id/contact", authToken_middleware_1.default, deleteContact_controller_1.default);
exports.default = routes;
